// <auto-generated />
using System;
using DbRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbRepository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190113212012_sss")]
    partial class sss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.GuitarTab.ActiveCourse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("Index");

                    b.HasKey("ID");

                    b.ToTable("ActivatedUserCourses");
                });

            modelBuilder.Entity("Model.GuitarTab.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Model.GuitarTab.Lesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseID");

                    b.Property<int>("MinTempoStep");

                    b.Property<string>("Name");

                    b.Property<int>("RepeatNumber");

                    b.Property<int>("StartBpm");

                    b.Property<int?>("TabID");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("TabID");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("Model.GuitarTab.Note", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Fret");

                    b.Property<byte>("StringNumber");

                    b.Property<int?>("TabIterationID");

                    b.HasKey("ID");

                    b.HasIndex("TabIterationID");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("Model.GuitarTab.Tab", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Creator");

                    b.Property<int>("GuitarType");

                    b.Property<string>("Name");

                    b.Property<double>("Tempo");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Tabs");
                });

            modelBuilder.Entity("Model.GuitarTab.TabIteration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TabID");

                    b.Property<double>("WaitTimeScalar");

                    b.HasKey("ID");

                    b.HasIndex("TabID");

                    b.ToTable("TabIteration");
                });

            modelBuilder.Entity("Model.UserModel.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.GuitarTab.Course", b =>
                {
                    b.HasOne("Model.UserModel.User")
                        .WithMany("Courses")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Model.GuitarTab.Lesson", b =>
                {
                    b.HasOne("Model.GuitarTab.Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseID");

                    b.HasOne("Model.GuitarTab.Tab", "Tab")
                        .WithMany()
                        .HasForeignKey("TabID");
                });

            modelBuilder.Entity("Model.GuitarTab.Note", b =>
                {
                    b.HasOne("Model.GuitarTab.TabIteration")
                        .WithMany("ActiveNotes")
                        .HasForeignKey("TabIterationID");
                });

            modelBuilder.Entity("Model.GuitarTab.Tab", b =>
                {
                    b.HasOne("Model.UserModel.User")
                        .WithMany("BoughtTabs")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Model.GuitarTab.TabIteration", b =>
                {
                    b.HasOne("Model.GuitarTab.Tab")
                        .WithMany("Iterations")
                        .HasForeignKey("TabID");
                });
#pragma warning restore 612, 618
        }
    }
}
